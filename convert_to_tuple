bun_options = ['milk', 'gluten free']
sauce_options = ['tomato', 'barbecue', 'none']
patty_options = range(4)
cheese_options = range(4)
other_options = ['yes', 'no', 'y', 'n']
stored = {}
base_price = 5

def convert_to_tuple(order_path):
    try:
        with open(order_path, 'r') as file:
            for line in file:
                tuple_items = []
                ordered_line = line.strip().split(',')
                if (ordered_line[0] in bun_options and
                    ordered_line[1] in sauce_options and
                    int(ordered_line[2]) in patty_options and
                    int(ordered_line[3]) in cheese_options and
                    ordered_line[4] in other_options and
                    ordered_line[5] in other_options and
                    ordered_line[6] in other_options):
                        tuple_items = [True if item.strip() == 'yes' else False if item.strip() == 'no' else int(item.strip()) if item.strip() == '0' or '1' or '2' or '3' else item.strip() for item in ordered_line]
                        final_tuple = tuple(tuple_items)
                        if final_tuple in stored:
                            stored[final_tuple] += 1
                        else:
                            stored[final_tuple] = 1
                else:
                     print('Error reading data. Please ensure each line of orders.txt starts with the bun type (milk or gluten free), followed by a comma, then the sauce type (tomato, barbecue or none), followed by a comma, then the number of patties (0-3), followed by a comma, then the number of slices of cheese (0-3), followed by a comma, then whether tomato is included (yes or no), followed by a comma, then whether lettuce is included (yes or no), followed by a comma, then whether onion is included (yes or no)')
    except FileNotFoundError:
        print('File not found, please provide a valid file path to orders.txt.')
    return stored


def get_price(stored_value):
    price = base_price
    if stored_value in stored:
        order_tuple = stored_value
        if 'gluten free' in order_tuple:
                price += 1
        price += sum(1 for item in order_tuple[4:] if item == True) - 1
        if int(order_tuple[2]) > 0:
            price += (int(order_tuple[2]) - 1) * 3 
        if int(order_tuple[3]) > 0:
            price += (int(order_tuple[3]) - 1)
    return price
    
 


valid_input = False
while not valid_input:
    try:
        get_top_burger = int(input('How many of the top burgers would you like to output?: '))
        if get_top_burger > 0:
            valid_input = True
        else:
            print('Input error. Please provide a valid integer greater than 0!')
    except ValueError:
        print('Input error. Please provide a valid integer!')

    
order_counts = convert_to_tuple('orders.txt') 
max_views = len(stored)

if get_top_burger > max_views:
     get_top_burger = max_views
     print(f'The amount of unique orders is {max_views}. Here are the top {max_views} orders: ')
for x in range(get_top_burger):
     max_key = max(stored, key=stored.get)
     print(f"Order: {max_key} Count: {stored[max_key]} Price: ${get_price(max_key)}")
     stored.pop(max_key)






